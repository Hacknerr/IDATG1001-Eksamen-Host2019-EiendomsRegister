package me.ntnu.folk.candidatenumber.project;


import java.util.Objects;

/**
 * This class is used to descbire a property.
 * @Author: André Gärtner
 */
public class Property {

    //gnr: lotNumber, bnr: sectionNumber
    private int municipalityNumber;
    private String municipalityName;
    private int lotNumber;
    private int sectionNumber;
    private String name;
    private float area;
    private String nameOfOwner;

    /**
     * This is a constructor that takes 7 parameters
     * @param municipalityNumber Parameter for municipality-number where the property is located.
     * @param municipalityName Parameter for municipality-name where the property is located.
     * @param lotNumber Parameter for lot-number of the property.
     * @param sectionNumber Parameter for section-number of the property.
     * @param name Parameter for name of the property.
     * @param area Parameter for the area-size of the property.
     * @param nameOfOwner Parameter for the name of owner of the property.
     */
    public Property(int municipalityNumber, String municipalityName, int lotNumber, int sectionNumber, String name, float area, String nameOfOwner) {
        this.municipalityNumber = municipalityNumber;
        this.municipalityName = municipalityName;
        this.lotNumber = lotNumber;
        this.sectionNumber = sectionNumber;
        this.name = name;
        this.area = area;
        this.nameOfOwner = nameOfOwner;
    }

    /**
     * This is a constructor that takes 6 parameters
     * @param municipalityNumber Parameter for municipality-number where the property is located.
     * @param municipalityName Parameter for municipality-name where the property is located.
     * @param lotNumber Parameter for lot-number of the property.
     * @param sectionNumber Parameter for section-number of the property.
     * @param area Parameter for the area-size of the property.
     * @param nameOfOwner Parameter for the name of owner of the property.
     */
    public Property(int municipalityNumber, String municipalityName, int lotNumber, int sectionNumber, float area, String nameOfOwner) {
        this.municipalityNumber = municipalityNumber;
        this.municipalityName = municipalityName;
        this.lotNumber = lotNumber;
        this.sectionNumber = sectionNumber;
        this.area = area;
        this.nameOfOwner = nameOfOwner;
    }

    /**
     * This function returns the municipality number of the property.
     * @return municipality number.
     */
    private int getMunicipalityNumber() {
        return municipalityNumber;
    }

    /**
     * This function returns the lot number of the property.
     * @return lot number.
     */
    public int getLotNumber() {
        return lotNumber;
    }

    /**
     * This function returns the section number of the property.
     * @return section number.
     */
    public int getSectionNumber() {
        return sectionNumber;
    }

    /**
     * This function returns the area-size of the property.
     * @return area
     */
    public double getArea() {
        return area;
    }

    //gnr: lotNumber, bnr: sectionNumber

    /**
     * This function returns information about the property.
     * @return a string of information.
     */
    @Override
    public String toString() {
        return municipalityNumber + "-" + lotNumber + "/" + sectionNumber;
    }

    /**
     * This function compares two objects.
     * @param o object
     * @return boolean
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Property property = (Property) o;
        return municipalityNumber == property.municipalityNumber &&
                lotNumber == property.lotNumber &&
                sectionNumber == property.sectionNumber &&
                Float.compare(property.area, area) == 0 &&
                Objects.equals(municipalityName, property.municipalityName) &&
                Objects.equals(name, property.name) &&
                Objects.equals(nameOfOwner, property.nameOfOwner);
    }

    /**
     * This function returns an integer value, generated by a hashing algorithm.
     * @return int
     */
    @Override
    public int hashCode() {
        return Objects.hash(municipalityNumber, municipalityName, lotNumber, sectionNumber, name, area, nameOfOwner);
    }

    /**
     * This function compares two objects by using certain fields
     * @param property municipality-number, lot-number & section-number.
     * @return boolean
     */
    public boolean comparePropertyByMunicipalityNumberLotAndSection(Property property){
        if(property.getMunicipalityNumber() == this.getMunicipalityNumber()
        && property.getLotNumber() == this.getLotNumber()
        && property.getSectionNumber() == this.sectionNumber){
            return true;
        }
        return false;
    }

}
